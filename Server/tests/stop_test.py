"""
This script tests the functionality of the stop_activity API call.
For correct results run this against the test data as generated by
database.py.
"""

import json
import urllib.request
import urllib.error

# Helper VARS
host = '127.0.0.1'
base_url = f'http://{host}:5000'

print('')

"""
HELPER FUNCTIONS
"""


# Generate correct url for API call and ID
def generate_url(call, id):
    return f'{base_url}/{call}?id={id}'


# Send request, and convert reply into JSON
def req(call, id):
    url = generate_url(call, id)
    reply = urllib.request.urlopen(url)
    content = reply.read().decode('utf-8')
    return json.loads(content)


"""
TEST FUNCTIONS
"""


def event_status(event_id, expected_value):
    test_status = ' OK'
    error = ''

    data = req('event', event_id)
    value = data['activity_status']
    if value != expected_value:
        test_status = ''
        error += f' {value} is not {expected_value}'

    return f'STATUS -{test_status}{error}'


def session_status(session_id, expected_value):
    test_status = ' OK'
    error = ''

    data = req('session', session_id)
    value = data['stop_time']
    if expected_value != "SOME_TIME":
        if value != expected_value:
            test_status = ''
            error += f' {value} is not {expected_value}'
    else:
        if not value:
            test_status = ''
            error += f' None is not {expected_value}'

    return f'STATUS -{test_status}{error}'


def stop_activity(event_id, expected_value):
    test_status = ' OK'
    error = ''

    data = req('stop_activity', event_id)
    value = data['new status']
    if value != expected_value:
        test_status = ''
        error += f' {value} is not {expected_value}'

    return f'STATUS -{test_status}{error}'


"""
RUNNING TESTS
"""

# TEST 1    - CHECK ACTIVITY 2 STATUS BEFORE STOPPING
t1 = event_status(2, 'started')
print(f'1. \tCheck activity 2 status before stopping \t- {t1}')

# TEST 2    - CHECK ACTIVITY 2 SESSIONS BEFORE STOPPING
t2 = session_status(2, None)
print(f'1. \tCheck session 2 status before stopping \t\t- {t2}')

# TEST 2    - STOP ACTIVITY 2
t3 = stop_activity(2, 'completed')
print(f'1. \tStop activity 2 \t\t\t\t\t\t\t- {t3}')

# TEST 1    - CHECK ACTIVITY 2 STATUS BEFORE STOPPING
t4 = event_status(2, 'completed')
print(f'1. \tCheck activity 2 status before stopping \t- {t4}')

# TEST 2    - CHECK ACTIVITY 2 SESSIONS BEFORE STOPPING
t5 = session_status(2, 'SOME_TIME')
print(f'1. \tCheck session 2 status before stopping \t\t- {t5}')
